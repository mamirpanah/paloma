name: Release
# This workflow helps with creating releases.
# This job will only be triggered when a tag (vX.X.x) is pushed
on:
  push:
    # Sequence of patterns matched against refs/tags
    branches:
      - master
    # tags:
    #   - "v[0-9]+.[0-9]+.[0-9]+-?*" # Push events to matching examples like v1.2.3, v1.2.3-beta1

permissions:
  contents: read

jobs:
  release:
    permissions:
      contents: write # for goreleaser/goreleaser-action to create a GitHub release
    runs-on: ubuntu-22.04 # stick with older LTS release for continued debian support
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'
      - name: Unshallow
        run: git fetch --prune --unshallow
      # - name: Install musl
      #   run: sudo apt-get update && sudo apt-get install -y gcc musl musl-tools musl-dev linux-headers-$(uname -r) build-essential libusb-1.0-0-dev
      - name: Extract versions
        id: extract-version
        run: |
          WASMVM_VERSION=$(grep 'github.com/CosmWasm/wasmvm' go.mod | awk '{print $2}')
          COMETBFT_VERSION=$(grep 'github.com/cometbft/cometbft' go.mod | grep -v indirect | awk '{print $2}')
          KERNEL_MACHINE=$(uname -m)
          echo "WASMVM_VERSION=$WASMVM_VERSION" >> $GITHUB_ENV
          echo "COMETBFT_VERSION=$COMETBFT_VERSION" >> $GITHUB_ENV
          echo "KERNEL_MACHINE=$KERNEL_MACHINE" >> $GITHUB_ENV
      - name: Create release
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WASMVM_VERSION: ${{ env.WASMVM_VERSION }}
          COMETBFT_VERSION: ${{ env.COMETBFT_VERSION }}
          KERNEL_MACHINE: ${{ env.KERNEL_MACHINE }}
